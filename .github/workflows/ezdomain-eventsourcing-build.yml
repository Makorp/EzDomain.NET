name: Build EzDomain.EventSourcing solution

on:
  workflow_dispatch:
    branches: [ "**" ]
    paths:
      - 'src/EzDomain.EventSourcing/src/**'
    inputs:
      use-diagnostics-verbosity:
        description: 'Use diagnostics verbosity level'
        required: true
        default: false
        type: boolean
  push:
    branches: [ "**" ]
    paths:
      - 'src/EzDomain.EventSourcing/src/**'
      
  pull_request:
    branches: [ "**" ]
    paths:
      - 'src/EzDomain.EventSourcing/src/**'

defaults:
  run:
    working-directory: ./src

jobs:
  build-solution-projects:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with: 
        dotnet-version: 7.0.x
    - name: Set verbosity level
      id: verbosity
      run: |
        if [[ "${{ github.event.inputs.use-diagnostics-verbosity }}" == "true" ]]; then
          echo "::set-output name=level::diagnostic"
        else
          echo "::set-output name=level::normal"
        fi
    - name: Restore project dependencies
      run: |
        dotnet restore EzDomain.EventSourcing/EzDomain.EventSourcing.sln --verbosity ${{ steps.verbosity.outputs.level }}
    - name: Build solution projects
      run: |
        dotnet build EzDomain.EventSourcing/EzDomain.EventSourcing.sln --configuration Release --verbosity ${{ steps.verbosity.outputs.level }}

  run-unit-tests:
    runs-on: ubuntu-latest
    needs: [build-solution-projects]
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with: 
        dotnet-version: 7.0.x
    - name: Set verbosity level
      id: verbosity
      run: |
        if [[ "${{ github.event.inputs.use-diagnostics-verbosity }}" == "true" ]]; then
          echo "::set-output name=level::diagnostic"
        else
          echo "::set-output name=level::normal"
        fi
    - name: Run unit tests
      run: |
        dotnet test EzDomain.EventSourcing/tests/UnitTests/EzDomain.EventSourcing.Tests.UnitTests.csproj --configuration Release --verbosity ${{ steps.verbosity.outputs.level }}
