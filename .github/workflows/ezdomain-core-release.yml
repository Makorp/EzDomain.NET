name: Release EzDomain.Core solution (to NuGet)

on:
  workflow_dispatch:
    inputs:
      Major:
        description: 'Increment Major version'
        required: true
        default: false
        type: boolean
      Minor:
        description: 'Increment Minor version'
        required: true
        default: false
        type: boolean
      Patch:
        description: 'Increment Patch version'
        required: true
        default: false
        type: boolean

defaults:
  run:
    working-directory: ./src/EzDomain.Core

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with: 
        dotnet-version: 7.0.x
    - name: Update version in csproj
      id: update_version
      run: |
        MAJOR=${{ github.event.inputs.Major }}
        MINOR=${{ github.event.inputs.Minor }}
        PATCH=${{ github.event.inputs.Patch }}
        if [[ "$MAJOR" == 'true' || "$MINOR" == 'true' || "$PATCH" == 'true' ]]; then
          VERSION=$(grep -oP '(?<=<Version>).*?(?=</Version>)' EzDomain.Core.csproj)
          IFS='.' read -ra ADDR <<< "$VERSION"
          if [[ "$MAJOR" == 'true' ]]; then
            ADDR[0]=$((ADDR[0] + 1))
            ADDR[1]=0
            ADDR[2]=0
          fi
          if [[ "$MINOR" == 'true' ]]; then
            ADDR[1]=$((ADDR[1] + 1))
            ADDR[2]=0
          fi
          if [[ "$PATCH" == 'true' ]]; then
            ADDR[2]=$((ADDR[2] + 1))
          fi
          NEW_VERSION="${ADDR[0]}.${ADDR[1]}.${ADDR[2]}"
          echo "Old assembly version:" $VERSION
          echo "New assembly version:" $NEW_VERSION
          sed -i "s/<Version>[0-9]*\.[0-9]*\.[0-9]*<\/Version>/<Version>$NEW_VERSION<\/Version>/g" EzDomain.Core.csproj
        fi
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'github-actions@github.com'
        git pull
        git add EzDomain.Core.csproj
        git commit -m "Assembly version update to: $NEW_VERSION"
        git push
    - name: Build and pack
      run: |
        dotnet build --configuration Release
        dotnet pack --configuration Release --output nupkgs

    # - name: Push to NuGet
    #   uses: brandedoutcast/publish-nuget@v2.5.2
    #   with:
    #     PROJECT_FILE_PATH: EzDomain.Core.csproj
    #     NUGET_KEY: ${{ secrets.NUGET_API_KEY }}
    #     PACKAGE_NAME: YourPackageName
    #   continue-on-error: true

    - name: Rollback version if push failed
      if: ${{ failure() }}
      run: git checkout -- EzDomain.Core.csproj